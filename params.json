{
  "name": "Product-catalogue",
  "tagline": "Spring-boot, MongoDB, AutoValue, AngularJs, Heroku",
  "body": "# About [Product-catalogue](https://product-catalogue-poc.herokuapp.com/): [![Build Status](https://travis-ci.org/ecararus/product-catalogue.svg?branch=master)](https://travis-ci.org/ecararus/product-catalogue) [![Coverage Status](https://coveralls.io/repos/github/ecararus/product-catalogue/badge.svg?branch=master)](https://coveralls.io/github/ecararus/product-catalogue?branch=master) [![Dependency Status](https://www.versioneye.com/user/projects/56f01b9b35630e003e0a7e4e/badge.svg?style=flat)](https://www.versioneye.com/user/projects/56f01b9b35630e003e0a7e4e) [![Code Climate](https://codeclimate.com/github/ecararus/product-catalogue/badges/gpa.svg)](https://codeclimate.com/github/ecararus/product-catalogue) [ ![Codeship Status for ecararus/product-catalogue](https://codeship.com/projects/9970d200-ce89-0133-ea65-56ac8db24476/status?branch=master)](https://codeship.com/projects/140958)  [![ReviewNinja](https://app.review.ninja/53860556/badge)](https://app.review.ninja/ecararus/product-catalogue) [![Slack Invite Button](https://slack-product-catalogue.herokuapp.com/badge.svg)](https://slack-invite-product-catalogue.herokuapp.com)\r\n\r\nProduct catalogue is self contained application is running on Apache Tomcat/8.0.30 as data store is used mongodb.\r\nUi implemented by using bootstrap and angular. Deployment is done throw Codeship on [heroku's cloud infrastructue](https://product-catalogue-poc.herokuapp.com).\r\n[Entire specification is available in project root folder](https://github.com/ecararus/product-catalogue/blob/master/Product%20Selection%20UT.PDF).\r\n\r\n\r\n## System requirements:\r\n - Java 1.8\r\n - Maven 3.3.3\r\n - Free ports: 27017(mongodb), 8080(apache tomcat)\r\n\r\n## Local deployment and testing:\r\n - Step1: Run in command lien \r\n ``` sh\r\n    $ mvn clean package spring-boot:run\r\n ```\r\n - Step2: Add cookie run in browser console \r\n ``` \r\n    > document.cookie=\"customerId=123;\";\r\n ```\r\n - Step3: Application: http://localhost:8080/\r\n - Step4: Check Api documentation: http://localhost:8080/swagger-ui.html\r\n - Step5: Code coverage:<br/> \r\n          1.Run > mvn clean verify / or visit [Coveralls](https://coveralls.io/github/ecararus/product-catalogue?branch=master)<br/>\r\n          2.Unit test coverage report product-catalogue/target/site/jacoco-ut/index.html<br/>\r\n          3.Integration test coverage report product-catalogue/target/site/jacoco-it/index.html<br> \r\n          \r\n## To implement:\r\n - Integrate with sales microservice for checkout function and with CustomerLocationService for location lookup.\r\n\r\n## Default data set:\r\nDomain model is aggregated in Customer and Product domain objects.\r\n\r\nInitial data set is created only for demo purpose. Later when the proper data store will be identified than com.sky.CatalogueAppConfiguration#run should be removed.<br/>\r\nBelow is listed default persisted dataset, as well api allow to add more.\r\n\r\n```\r\nProducts:\r\n{ \"name\" : \"Arsenal TV\" , \"category\" : \"Sport\" , \"locationId\" : \"London\"} <br/>\r\n{ \"name\" : \"Chelsea TV\" , \"category\" : \"Sport\" , \"locationId\" : \"London\"} <br/>\r\n{ \"name\" : \"Liverpool TV\" , \"category\" : \"Sport\" , \"locationId\" : \"Liverpool\"} <br/>\r\n{ \"name\" : \"Sky News\" , \"category\" : \"News\"} <br/>\r\n{ \"name\" : \"Sky Sport News\" , \"category\" : \"News\"} <br/>\r\n```\r\n\r\nUsers and location are mocked so service will be able to identify only:  <br/>\r\n```\r\nCustomer locations:\r\n {\"customerId\" : \"123\", \"locationId\" :  \"London\"} <br/>\r\n {\"customerId\" : \"321\", \"locationId\" :  \"Liverpool\"} <br/>\r\n```\r\n\r\n## Out of scope:\r\n - Anny eventual consistency issue with CustomerLocationService in case it will be decided to implement as a separate microservice.\r\n - Anny additionl infrastructural configuration(except heroku's configuration).\r\n\r\n## Convention:\r\n - Test names does not contains \"test\" prefix and should provide as message the purpose of test(will be easy to read in case it is failing).\r\n - Test should have coverage > 70%.\r\n - Unit test class will have \"Test\" postfix.\r\n - Integration test class will have \"IT\" postfix.\r\n\r\n## DISCLAIMER:\r\nPurpose of project is only educational.\r\nThis project should not be used for any commercial purpose.\r\nThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\r\nhttp://creativecommons.org/licenses/by-nc-sa/4.0/.\r\n\r\n## Author:\r\nEugeniu Cararus\r\ncararuseugeniu@gmail.com\r\n",
  "google": "UA-75091731-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}